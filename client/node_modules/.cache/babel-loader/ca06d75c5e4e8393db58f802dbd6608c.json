{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/world-traveler-react-ts/client/src/components/Map.tsx\";\nimport * as React from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { PinIcon } from '../svg/index';\nconst MAPBOX_TOKEN = 'pk.eyJ1Ijoic2VzY2h3YXJ0ejgiLCJhIjoiY2s5aW83cXNxMWJ1MTNrbGxzaW55YmFqbCJ9.Wcju4UV4OLz90abpY6HtuA' || '';\nconst initialState = {\n  viewport: {\n    height: 400,\n    latitude: 37.776021,\n    longitude: -122.4171949,\n    minZoom: 2,\n    width: 400,\n    zoom: 2\n  },\n  markerLocations: [{\n    latitude: 37.776021,\n    longitude: -130.4171949\n  }, {\n    latitude: 37.776021,\n    longitude: -122.4171949\n  }, {\n    latitude: 45.776021,\n    longitude: -122.4171949\n  }]\n};\nexport default class Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.updateViewport = viewport => {\n      this.setState(prevState => ({\n        viewport: { ...prevState.viewport,\n          ...viewport\n        }\n      }));\n    };\n\n    this.resize = () => {\n      this.setState(prevState => ({\n        viewport: { ...prevState.viewport,\n          height: window.innerHeight,\n          width: window.innerWidth\n        }\n      }));\n    };\n\n    this.renderMarkers = () => {\n      return this.state.markerLocations.map(location => {\n        return React.createElement(Marker, {\n          latitude: location.latitude,\n          longitude: location.longitude,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, PinIcon());\n      });\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resize);\n    this.resize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    const {\n      viewport\n    } = this.state;\n    return React.createElement(ReactMapGL, Object.assign({}, viewport, {\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      onViewportChange: v => this.updateViewport(v),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), this.renderMarkers());\n  }\n\n}","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/world-traveler-react-ts/client/src/components/Map.tsx"],"names":["React","ReactMapGL","Marker","PinIcon","MAPBOX_TOKEN","initialState","viewport","height","latitude","longitude","minZoom","width","zoom","markerLocations","Map","Component","state","updateViewport","setState","prevState","resize","window","innerHeight","innerWidth","renderMarkers","map","location","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","v"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,IAAqBC,MAArB,QAAmC,cAAnC;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,YAAY,GAChB,oGACA,EAFF;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,GADA;AAERC,IAAAA,QAAQ,EAAE,SAFF;AAGRC,IAAAA,SAAS,EAAE,CAAC,WAHJ;AAIRC,IAAAA,OAAO,EAAE,CAJD;AAKRC,IAAAA,KAAK,EAAE,GALC;AAMRC,IAAAA,IAAI,EAAE;AANE,GADS;AASnBC,EAAAA,eAAe,EAAE,CACf;AAAEL,IAAAA,QAAQ,EAAE,SAAZ;AAAuBC,IAAAA,SAAS,EAAE,CAAC;AAAnC,GADe,EAEf;AAAED,IAAAA,QAAQ,EAAE,SAAZ;AAAuBC,IAAAA,SAAS,EAAE,CAAC;AAAnC,GAFe,EAGf;AAAED,IAAAA,QAAQ,EAAE,SAAZ;AAAuBC,IAAAA,SAAS,EAAE,CAAC;AAAnC,GAHe;AATE,CAArB;AAuBA,eAAe,MAAMK,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAmD;AAAA;AAAA;AAAA,SAChEC,KADgE,GACjDX,YADiD;;AAAA,SAYhEY,cAZgE,GAY9CX,QAAD,IAAwB;AACvC,WAAKY,QAAL,CAAeC,SAAD,KAAgB;AAC5Bb,QAAAA,QAAQ,EAAE,EAAE,GAAGa,SAAS,CAACb,QAAf;AAAyB,aAAGA;AAA5B;AADkB,OAAhB,CAAd;AAGD,KAhB+D;;AAAA,SAkBhEc,MAlBgE,GAkBvD,MAAM;AACb,WAAKF,QAAL,CAAeC,SAAD,KAAgB;AAC5Bb,QAAAA,QAAQ,EAAE,EACR,GAAGa,SAAS,CAACb,QADL;AAERC,UAAAA,MAAM,EAAEc,MAAM,CAACC,WAFP;AAGRX,UAAAA,KAAK,EAAEU,MAAM,CAACE;AAHN;AADkB,OAAhB,CAAd;AAOD,KA1B+D;;AAAA,SA4BhEC,aA5BgE,GA4BhD,MAAM;AACpB,aAAO,KAAKR,KAAL,CAAWH,eAAX,CAA2BY,GAA3B,CAAgCC,QAAD,IAAc;AAClD,eACE,oBAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEA,QAAQ,CAAClB,QAA3B;AAAqC,UAAA,SAAS,EAAEkB,QAAQ,CAACjB,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGN,OAAO,EADV,CADF;AAKD,OANM,CAAP;AAOD,KApC+D;AAAA;;AAGhEwB,EAAAA,iBAAiB,GAAG;AAClBN,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkC,KAAKR,MAAvC;AACA,SAAKA,MAAL;AACD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrBR,IAAAA,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqC,KAAKV,MAA1C;AACD;;AA4BDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEzB,MAAAA;AAAF,QAAe,KAAKU,KAA1B;AACA,WACE,oBAAC,UAAD,oBACMV,QADN;AAEE,MAAA,oBAAoB,EAAEF,YAFxB;AAGE,MAAA,gBAAgB,EAAG4B,CAAD,IAAiB,KAAKf,cAAL,CAAoBe,CAApB,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKG,KAAKR,aAAL,EALH,CADF;AASD;;AAjD+D","sourcesContent":["import * as React from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { PinIcon } from '../svg/index';\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1Ijoic2VzY2h3YXJ0ejgiLCJhIjoiY2s5aW83cXNxMWJ1MTNrbGxzaW55YmFqbCJ9.Wcju4UV4OLz90abpY6HtuA' ||\n  '';\n\nconst initialState = {\n  viewport: {\n    height: 400,\n    latitude: 37.776021,\n    longitude: -122.4171949,\n    minZoom: 2,\n    width: 400,\n    zoom: 2,\n  },\n  markerLocations: [\n    { latitude: 37.776021, longitude: -130.4171949 },\n    { latitude: 37.776021, longitude: -122.4171949 },\n    { latitude: 45.776021, longitude: -122.4171949 },\n  ],\n};\n\ninterface MapProps {\n  destinations: LatLng[];\n}\n\ntype State = typeof initialState;\ntype Viewport = typeof initialState.viewport;\n\nexport default class Map extends React.Component<MapProps, State> {\n  state: State = initialState;\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resize);\n    this.resize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  updateViewport = (viewport: Viewport) => {\n    this.setState((prevState) => ({\n      viewport: { ...prevState.viewport, ...viewport },\n    }));\n  };\n\n  resize = () => {\n    this.setState((prevState) => ({\n      viewport: {\n        ...prevState.viewport,\n        height: window.innerHeight,\n        width: window.innerWidth,\n      },\n    }));\n  };\n\n  renderMarkers = () => {\n    return this.state.markerLocations.map((location) => {\n      return (\n        <Marker latitude={location.latitude} longitude={location.longitude}>\n          {PinIcon()}\n        </Marker>\n      );\n    });\n  };\n\n  render() {\n    const { viewport } = this.state;\n    return (\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        onViewportChange={(v: Viewport) => this.updateViewport(v)}\n      >\n        {this.renderMarkers()}\n      </ReactMapGL>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}