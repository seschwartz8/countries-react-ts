{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/world-traveler-react-ts/client/src/components/Map.tsx\";\nimport * as React from 'react';\nimport ReactMapGL, { NavigationControl } from 'react-map-gl';\nconst MAPBOX_TOKEN = 'pk.eyJ1Ijoic2VzY2h3YXJ0ejgiLCJhIjoiY2s5aW83cXNxMWJ1MTNrbGxzaW55YmFqbCJ9.Wcju4UV4OLz90abpY6HtuA' || '';\nconst initialState = {\n  viewport: {\n    height: 400,\n    latitude: 37.776021,\n    longitude: -122.4171949,\n    minZoom: 1,\n    width: 400,\n    zoom: 1\n  }\n};\nexport default class Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.updateViewport = viewport => {\n      this.setState(prevState => ({\n        viewport: { ...prevState.viewport,\n          ...viewport\n        }\n      }));\n    };\n\n    this.resize = () => {\n      this.setState(prevState => ({\n        viewport: { ...prevState.viewport,\n          height: window.innerHeight,\n          width: window.innerWidth\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resize);\n    this.resize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    const {\n      viewport\n    } = this.state;\n    return React.createElement(ReactMapGL, Object.assign({}, viewport, {\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      onViewportChange: v => this.updateViewport(v),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        right: 30,\n        bottom: 40\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(NavigationControl, {\n      onViewportChange: this.updateViewport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/world-traveler-react-ts/client/src/components/Map.tsx"],"names":["React","ReactMapGL","NavigationControl","MAPBOX_TOKEN","initialState","viewport","height","latitude","longitude","minZoom","width","zoom","Map","Component","state","updateViewport","setState","prevState","resize","window","innerHeight","innerWidth","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","v","position","right","bottom"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,IAAqBC,iBAArB,QAA8C,cAA9C;AAEA,MAAMC,YAAY,GAChB,oGACA,EAFF;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,GADA;AAERC,IAAAA,QAAQ,EAAE,SAFF;AAGRC,IAAAA,SAAS,EAAE,CAAC,WAHJ;AAIRC,IAAAA,OAAO,EAAE,CAJD;AAKRC,IAAAA,KAAK,EAAE,GALC;AAMRC,IAAAA,IAAI,EAAE;AANE;AADS,CAArB;AAaA,eAAe,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAgD;AAAA;AAAA;AAAA,SACtDC,KADsD,GACpCV,YADoC;;AAAA,SAYtDW,cAZsD,GAYpCV,QAAD,IAAwB;AAC9C,WAAKW,QAAL,CAAeC,SAAD,KAAgB;AAC5BZ,QAAAA,QAAQ,EAAE,EAAE,GAAGY,SAAS,CAACZ,QAAf;AAAyB,aAAGA;AAA5B;AADkB,OAAhB,CAAd;AAGD,KAhB4D;;AAAA,SAkBtDa,MAlBsD,GAkB7C,MAAM;AACpB,WAAKF,QAAL,CAAeC,SAAD,KAAgB;AAC5BZ,QAAAA,QAAQ,EAAE,EACR,GAAGY,SAAS,CAACZ,QADL;AAERC,UAAAA,MAAM,EAAEa,MAAM,CAACC,WAFP;AAGRV,UAAAA,KAAK,EAAES,MAAM,CAACE;AAHN;AADkB,OAAhB,CAAd;AAOD,KA1B4D;AAAA;;AAGtDC,EAAAA,iBAAP,GAA2B;AACzBH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKL,MAAvC;AACA,SAAKA,MAAL;AACD;;AAEMM,EAAAA,oBAAP,GAA8B;AAC5BL,IAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqC,KAAKP,MAA1C;AACD;;AAkBMQ,EAAAA,MAAP,GAAgB;AACd,UAAM;AAAErB,MAAAA;AAAF,QAAe,KAAKS,KAA1B;AACA,WACE,oBAAC,UAAD,oBACMT,QADN;AAEE,MAAA,oBAAoB,EAAEF,YAFxB;AAGE,MAAA,gBAAgB,EAAGwB,CAAD,IAAiB,KAAKZ,cAAL,CAAoBY,CAApB,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,KAAK,EAAE,EAA/B;AAAmCC,QAAAA,MAAM,EAAE;AAA3C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAmB,MAAA,gBAAgB,EAAE,KAAKf,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CADF;AAWD;;AAzC4D","sourcesContent":["import * as React from 'react';\nimport ReactMapGL, { NavigationControl } from 'react-map-gl';\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1Ijoic2VzY2h3YXJ0ejgiLCJhIjoiY2s5aW83cXNxMWJ1MTNrbGxzaW55YmFqbCJ9.Wcju4UV4OLz90abpY6HtuA' ||\n  '';\nconst initialState = {\n  viewport: {\n    height: 400,\n    latitude: 37.776021,\n    longitude: -122.4171949,\n    minZoom: 1,\n    width: 400,\n    zoom: 1,\n  },\n};\ntype MapState = typeof initialState;\ntype Viewport = typeof initialState.viewport;\n\nexport default class Map extends React.Component<{}, MapState> {\n  public state: MapState = initialState;\n\n  public componentDidMount() {\n    window.addEventListener('resize', this.resize);\n    this.resize();\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  public updateViewport = (viewport: Viewport) => {\n    this.setState((prevState) => ({\n      viewport: { ...prevState.viewport, ...viewport },\n    }));\n  };\n\n  public resize = () => {\n    this.setState((prevState) => ({\n      viewport: {\n        ...prevState.viewport,\n        height: window.innerHeight,\n        width: window.innerWidth,\n      },\n    }));\n  };\n\n  public render() {\n    const { viewport } = this.state;\n    return (\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        onViewportChange={(v: Viewport) => this.updateViewport(v)}\n      >\n        <div style={{ position: 'absolute', right: 30, bottom: 40 }}>\n          <NavigationControl onViewportChange={this.updateViewport} />\n        </div>\n      </ReactMapGL>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}