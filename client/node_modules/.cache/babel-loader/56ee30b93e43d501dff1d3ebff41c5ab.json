{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/world-traveler-react-ts/client/src/components/Map.tsx\";\nimport * as React from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { PinIcon } from '../svg/index';\nconst MAPBOX_TOKEN = 'pk.eyJ1Ijoic2VzY2h3YXJ0ejgiLCJhIjoiY2s5aW83cXNxMWJ1MTNrbGxzaW55YmFqbCJ9.Wcju4UV4OLz90abpY6HtuA' || '';\nconst initialState = {\n  viewport: {\n    height: 400,\n    latitude: 37.776021,\n    longitude: -122.4171949,\n    minZoom: 2,\n    width: 400,\n    zoom: 2\n  },\n  markerLocations: {\n    latitude: 37.776021,\n    longitude: -122.4171949\n  }\n};\nexport default class Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.updateViewport = viewport => {\n      this.setState(prevState => ({\n        viewport: { ...prevState.viewport,\n          ...viewport\n        }\n      }));\n    };\n\n    this.resize = () => {\n      this.setState(prevState => ({\n        viewport: { ...prevState.viewport,\n          height: window.innerHeight,\n          width: window.innerWidth\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resize);\n    this.resize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    const {\n      viewport\n    } = this.state;\n    return React.createElement(ReactMapGL, Object.assign({}, viewport, {\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      onViewportChange: v => this.updateViewport(v),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      latitude: this.state.markerLocation.latitude,\n      longitude: this.state.markerLocation.longitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Hello\", PinIcon()));\n  }\n\n}","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/world-traveler-react-ts/client/src/components/Map.tsx"],"names":["React","ReactMapGL","Marker","PinIcon","MAPBOX_TOKEN","initialState","viewport","height","latitude","longitude","minZoom","width","zoom","markerLocations","Map","Component","state","updateViewport","setState","prevState","resize","window","innerHeight","innerWidth","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","v","markerLocation"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,IAAqBC,MAArB,QAAmC,cAAnC;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,YAAY,GAChB,oGACA,EAFF;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,GADA;AAERC,IAAAA,QAAQ,EAAE,SAFF;AAGRC,IAAAA,SAAS,EAAE,CAAC,WAHJ;AAIRC,IAAAA,OAAO,EAAE,CAJD;AAKRC,IAAAA,KAAK,EAAE,GALC;AAMRC,IAAAA,IAAI,EAAE;AANE,GADS;AASnBC,EAAAA,eAAe,EAAE;AAAEL,IAAAA,QAAQ,EAAE,SAAZ;AAAuBC,IAAAA,SAAS,EAAE,CAAC;AAAnC;AATE,CAArB;AAeA,eAAe,MAAMK,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAA6C;AAAA;AAAA;AAAA,SAC1DC,KAD0D,GAC3CX,YAD2C;;AAAA,SAY1DY,cAZ0D,GAYxCX,QAAD,IAAwB;AACvC,WAAKY,QAAL,CAAeC,SAAD,KAAgB;AAC5Bb,QAAAA,QAAQ,EAAE,EAAE,GAAGa,SAAS,CAACb,QAAf;AAAyB,aAAGA;AAA5B;AADkB,OAAhB,CAAd;AAGD,KAhByD;;AAAA,SAkB1Dc,MAlB0D,GAkBjD,MAAM;AACb,WAAKF,QAAL,CAAeC,SAAD,KAAgB;AAC5Bb,QAAAA,QAAQ,EAAE,EACR,GAAGa,SAAS,CAACb,QADL;AAERC,UAAAA,MAAM,EAAEc,MAAM,CAACC,WAFP;AAGRX,UAAAA,KAAK,EAAEU,MAAM,CAACE;AAHN;AADkB,OAAhB,CAAd;AAOD,KA1ByD;AAAA;;AAG1DC,EAAAA,iBAAiB,GAAG;AAClBH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKL,MAAvC;AACA,SAAKA,MAAL;AACD;;AAEDM,EAAAA,oBAAoB,GAAG;AACrBL,IAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqC,KAAKP,MAA1C;AACD;;AAkBDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtB,MAAAA;AAAF,QAAe,KAAKU,KAA1B;AACA,WACE,oBAAC,UAAD,oBACMV,QADN;AAEE,MAAA,oBAAoB,EAAEF,YAFxB;AAGE,MAAA,gBAAgB,EAAGyB,CAAD,IAAiB,KAAKZ,cAAL,CAAoBY,CAApB,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWc,cAAX,CAA0BtB,QADtC;AAEE,MAAA,SAAS,EAAE,KAAKQ,KAAL,CAAWc,cAAX,CAA0BrB,SAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKGN,OAAO,EALV,CALF,CADF;AAeD;;AA7CyD","sourcesContent":["import * as React from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { PinIcon } from '../svg/index';\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1Ijoic2VzY2h3YXJ0ejgiLCJhIjoiY2s5aW83cXNxMWJ1MTNrbGxzaW55YmFqbCJ9.Wcju4UV4OLz90abpY6HtuA' ||\n  '';\n\nconst initialState = {\n  viewport: {\n    height: 400,\n    latitude: 37.776021,\n    longitude: -122.4171949,\n    minZoom: 2,\n    width: 400,\n    zoom: 2,\n  },\n  markerLocations: { latitude: 37.776021, longitude: -122.4171949 },\n};\n\ntype State = typeof initialState;\ntype Viewport = typeof initialState.viewport;\n\nexport default class Map extends React.Component<{}, State> {\n  state: State = initialState;\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resize);\n    this.resize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  updateViewport = (viewport: Viewport) => {\n    this.setState((prevState) => ({\n      viewport: { ...prevState.viewport, ...viewport },\n    }));\n  };\n\n  resize = () => {\n    this.setState((prevState) => ({\n      viewport: {\n        ...prevState.viewport,\n        height: window.innerHeight,\n        width: window.innerWidth,\n      },\n    }));\n  };\n\n  render() {\n    const { viewport } = this.state;\n    return (\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        onViewportChange={(v: Viewport) => this.updateViewport(v)}\n      >\n        <Marker\n          latitude={this.state.markerLocation.latitude}\n          longitude={this.state.markerLocation.longitude}\n        >\n          Hello\n          {PinIcon()}\n        </Marker>\n      </ReactMapGL>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}