{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/countries-react-ts/world-traveler-react-ts/src/components/Card.tsx\";\nimport React, { useContext, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport ModeContext from '../contexts/mode';\n\nconst Card = ({\n  imgUrl,\n  name,\n  population,\n  region,\n  capital\n}) => {\n  const mode = useContext(ModeContext);\n  const [flipped, setFlipped] = useState(false);\n\n  const toggleFlip = () => {\n    setFlipped(flipped => !flipped);\n  };\n\n  return React.createElement(FlipCard, {\n    onClick: toggleFlip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(InnerCardContainer, {\n    flipped: flipped,\n    mode: mode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(CardFront, {\n    mode: mode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgUrl,\n    alt: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Population: \"), \" \", population), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Region: \"), \" \", region), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Capital: \"), \" \", capital))), React.createElement(CardBack, {\n    mode: mode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(StyledButton, {\n    onClick: () => console.log('clicked'),\n    mode: mode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Pin Destination\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Population: \"), \" \", population), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Region: \"), \" \", region), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Capital: \"), \" \", capital)))));\n};\n\nexport default Card; // Styled component\n\nconst HoverAnimation = keyframes`\n  100% {\n    transform: scale(1.1);\n  }\n`;\nconst InnerCardContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n  border-radius: 5px;\n\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n    color: black;\n    box-shadow: 0 0 8px #d9d9d9;\n    ` : `\n    color: white;\n    box-shadow: 0 0 8px #1D2A36;\n  `};\n\n  ${({\n  flipped = true\n}) => flipped === true ? `\n      transform: rotateY(180deg);\n      ` : ``};\n`;\nconst FlipCard = styled.div`\n  background-color: transparent;\n  margin: 2%;\n  width: 250px;\n  height: 380px;\n  perspective: 1000px;\n  border-radius: 5px;\n  &:hover {\n    animation: ${HoverAnimation} 0.3s 1 forwards;\n  }\n`;\nconst CardFront = styled.div`\n  backface-visibility: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  & img {\n    max-width: 250px;\n    border-radius: 5px 5px 0 0;\n  }\n\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n    background-color: white;\n    color: black;\n    ` : `\n    background-color: #324354;\n    color: white;\n  `};\n`;\nconst CardBack = styled.div`\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n    background-color: white;\n    color: black;\n    ` : `\n    background-color: #324354;\n    color: white;\n  `};\n`;\nconst StyledButton = styled.div`\n  padding: 10%;\n  border-radius: 5px;\n  &:hover {\n    opacity: 0.8;\n    box-shadow: 0 0 10px #1d2a36;\n  }\n\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n      background-color: #d5dbed;\n      ` : `\n      background-color: #7676a8;\n      `};\n`;","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/countries-react-ts/world-traveler-react-ts/src/components/Card.tsx"],"names":["React","useContext","useState","styled","keyframes","ModeContext","Card","imgUrl","name","population","region","capital","mode","flipped","setFlipped","toggleFlip","console","log","HoverAnimation","InnerCardContainer","div","FlipCard","CardFront","CardBack","StyledButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAUA,MAAMC,IAAyB,GAAG,CAAC;AACjCC,EAAAA,MADiC;AAEjCC,EAAAA,IAFiC;AAGjCC,EAAAA,UAHiC;AAIjCC,EAAAA,MAJiC;AAKjCC,EAAAA;AALiC,CAAD,KAMjB;AACf,QAAMC,IAAI,GAAGX,UAAU,CAACI,WAAD,CAAvB;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMa,UAAU,GAAG,MAAM;AACvBD,IAAAA,UAAU,CAAED,OAAD,IAAa,CAACA,OAAf,CAAV;AACD,GAFD;;AAIA,SACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEE,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAoB,IAAA,OAAO,EAAEF,OAA7B;AAAsC,IAAA,IAAI,EAAED,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEL,MAAV;AAAkB,IAAA,GAAG,EAAEC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,OACuBC,UADvB,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACmBC,MADnB,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,OACoBC,OADpB,CARF,CAFF,CADF,EAgBE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMI,OAAO,CAACC,GAAR,CAAY,SAAZ,CAA7B;AAAqD,IAAA,IAAI,EAAEL,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,OACuBC,UADvB,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACmBC,MADnB,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,OACoBC,OADpB,CARF,CAJF,CAhBF,CADF,CADF;AAsCD,CApDD;;AAsDA,eAAeL,IAAf,C,CAEA;;AACA,MAAMY,cAAc,GAAGd,SAAU;;;;CAAjC;AAeA,MAAMe,kBAAkB,GAAGhB,MAAM,CAACiB,GAAI;;;;;;;;;IASlC,CAAC;AAAER,EAAAA,IAAI,GAAG;AAAT,CAAD,KACAA,IAAI,KAAM,OAAV,GACK;;;KADL,GAKK;;;GAGL;;IAEA,CAAC;AAAEC,EAAAA,OAAO,GAAG;AAAZ,CAAD,KACAA,OAAO,KAAK,IAAZ,GACK;;OADL,GAIK,EAAE;CAzBX;AA4BA,MAAMQ,QAAQ,GAAGlB,MAAM,CAACiB,GAAI;;;;;;;;iBAQXF,cAAe;;CARhC;AAYA,MAAMI,SAAS,GAAGnB,MAAM,CAACiB,GAAI;;;;;;;;;;;;;;;;;IAiBzB,CAAC;AAAER,EAAAA,IAAI,GAAG;AAAT,CAAD,KACAA,IAAI,KAAM,OAAV,GACK;;;KADL,GAKK;;;GAGL;CA1BJ;AA6BA,MAAMW,QAAQ,GAAGpB,MAAM,CAACiB,GAAI;;;;;;;;;;;;;;;;;IAiBxB,CAAC;AAAER,EAAAA,IAAI,GAAG;AAAT,CAAD,KACAA,IAAI,KAAM,OAAV,GACK;;;KADL,GAKK;;;GAGL;CA1BJ;AA6BA,MAAMY,YAAY,GAAGrB,MAAM,CAACiB,GAAI;;;;;;;;IAQ5B,CAAC;AAAER,EAAAA,IAAI,GAAG;AAAT,CAAD,KACAA,IAAI,KAAM,OAAV,GACK;;OADL,GAIK;;OAED;CAfR","sourcesContent":["import React, { useContext, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport ModeContext from '../contexts/mode';\n\ninterface CardProps {\n  imgUrl: string;\n  name: string;\n  population: string;\n  region: string;\n  capital: string;\n}\n\nconst Card: React.FC<CardProps> = ({\n  imgUrl,\n  name,\n  population,\n  region,\n  capital,\n}: CardProps) => {\n  const mode = useContext(ModeContext);\n  const [flipped, setFlipped] = useState(false);\n\n  const toggleFlip = () => {\n    setFlipped((flipped) => !flipped);\n  };\n\n  return (\n    <FlipCard onClick={toggleFlip}>\n      <InnerCardContainer flipped={flipped} mode={mode}>\n        <CardFront mode={mode}>\n          <img src={imgUrl} alt={name}></img>\n          <div>\n            <h3>{name}</h3>\n            <p>\n              <b>Population: </b> {population}\n            </p>\n            <p>\n              <b>Region: </b> {region}\n            </p>\n            <p>\n              <b>Capital: </b> {capital}\n            </p>\n          </div>\n        </CardFront>\n        <CardBack mode={mode}>\n          <StyledButton onClick={() => console.log('clicked')} mode={mode}>\n            Pin Destination\n          </StyledButton>\n          <div>\n            <h3>{name}</h3>\n            <p>\n              <b>Population: </b> {population}\n            </p>\n            <p>\n              <b>Region: </b> {region}\n            </p>\n            <p>\n              <b>Capital: </b> {capital}\n            </p>\n          </div>\n        </CardBack>\n      </InnerCardContainer>\n    </FlipCard>\n  );\n};\n\nexport default Card;\n\n// Styled component\nconst HoverAnimation = keyframes`\n  100% {\n    transform: scale(1.1);\n  }\n`;\n\ninterface CardSideProps {\n  mode: string;\n}\n\ninterface InnerCardContainerProps {\n  mode: string;\n  flipped: boolean;\n}\n\nconst InnerCardContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n  border-radius: 5px;\n\n  ${({ mode = 'light' }: InnerCardContainerProps) =>\n    mode === `light`\n      ? `\n    color: black;\n    box-shadow: 0 0 8px #d9d9d9;\n    `\n      : `\n    color: white;\n    box-shadow: 0 0 8px #1D2A36;\n  `};\n\n  ${({ flipped = true }: InnerCardContainerProps) =>\n    flipped === true\n      ? `\n      transform: rotateY(180deg);\n      `\n      : ``};\n`;\n\nconst FlipCard = styled.div`\n  background-color: transparent;\n  margin: 2%;\n  width: 250px;\n  height: 380px;\n  perspective: 1000px;\n  border-radius: 5px;\n  &:hover {\n    animation: ${HoverAnimation} 0.3s 1 forwards;\n  }\n`;\n\nconst CardFront = styled.div`\n  backface-visibility: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  & img {\n    max-width: 250px;\n    border-radius: 5px 5px 0 0;\n  }\n\n  ${({ mode = 'light' }: CardSideProps) =>\n    mode === `light`\n      ? `\n    background-color: white;\n    color: black;\n    `\n      : `\n    background-color: #324354;\n    color: white;\n  `};\n`;\n\nconst CardBack = styled.div`\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  ${({ mode = 'light' }: CardSideProps) =>\n    mode === `light`\n      ? `\n    background-color: white;\n    color: black;\n    `\n      : `\n    background-color: #324354;\n    color: white;\n  `};\n`;\n\nconst StyledButton = styled.div`\n  padding: 10%;\n  border-radius: 5px;\n  &:hover {\n    opacity: 0.8;\n    box-shadow: 0 0 10px #1d2a36;\n  }\n\n  ${({ mode = 'light' }: CardSideProps) =>\n    mode === `light`\n      ? `\n      background-color: #d5dbed;\n      `\n      : `\n      background-color: #7676a8;\n      `};\n`;\n\ninterface StyledButtonProps {\n  mode: string;\n}\n"]},"metadata":{},"sourceType":"module"}