{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/countries-react-ts/src/components/Card.tsx\";\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport ModeContext from '../contexts/mode';\n\nconst Card = ({\n  imgUrl,\n  name,\n  population,\n  region,\n  capital\n}) => {\n  const mode = useContext(ModeContext);\n  return React.createElement(FlipCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(InnerCardContainer, {\n    mode: mode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(CardFront, {\n    mode: mode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgUrl,\n    alt: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Population: \"), \" \", population), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Region: \"), \" \", region), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Capital: \"), \" \", capital))), React.createElement(CardBack, {\n    mode: mode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"BACK\"))));\n};\n\nexport default Card; // Styled component\n\nconst InnerCardContainer = styled.div`\n  border-radius: 5px;\n  position: relative;\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n  width: 100%;\n  height: 100%;\n\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n    color: black;\n    box-shadow: 0 0 8px #d9d9d9;\n    ` : `\n    color: white;\n    box-shadow: 0 0 8px #1D2A36;\n  `};\n`;\nconst FlipCard = styled.div`\n  background-color: transparent;\n  margin: 2%;\n  width: 250px;\n  height: 500px;\n\n  perspective: 1000px;\n\n  &:hover ${InnerCardContainer} {\n    transform: rotateY(180deg);\n  }\n`;\nconst CardFront = styled.div`\n  backface-visibility: hidden;\n\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  & img {\n    max-width: 100%;\n  }\n\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n    background-color: white;\n    color: black;\n    ` : `\n    background-color: #324354;\n    color: white;\n  `};\n`;\nconst CardBack = styled.div`\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n  border: 1px solid red;\n\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n    background-color: white;\n    color: black;\n    ` : `\n    background-color: #324354;\n    color: white;\n  `};\n`;","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/countries-react-ts/src/components/Card.tsx"],"names":["React","useContext","styled","ModeContext","Card","imgUrl","name","population","region","capital","mode","InnerCardContainer","div","FlipCard","CardFront","CardBack"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAkC,mBAAlC;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAUA,MAAMC,IAAyB,GAAG,CAAC;AACjCC,EAAAA,MADiC;AAEjCC,EAAAA,IAFiC;AAGjCC,EAAAA,UAHiC;AAIjCC,EAAAA,MAJiC;AAKjCC,EAAAA;AALiC,CAAD,KAMjB;AACf,QAAMC,IAAI,GAAGT,UAAU,CAACE,WAAD,CAAvB;AAEA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAoB,IAAA,IAAI,EAAEO,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEL,MAAV;AAAkB,IAAA,GAAG,EAAEC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,OACuBC,UADvB,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACmBC,MADnB,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,OACoBC,OADpB,CARF,CAFF,CADF,EAgBE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAhBF,CADF,CADF;AAwBD,CAjCD;;AAmCA,eAAeN,IAAf,C,CAEA;;AAKA,MAAMO,kBAAkB,GAAGT,MAAM,CAACU,GAAI;;;;;;;;IAQlC,CAAC;AAAEF,EAAAA,IAAI,GAAG;AAAT,CAAD,KACAA,IAAI,KAAM,OAAV,GACK;;;KADL,GAKK;;;GAGL;CAjBJ;AAoBA,MAAMG,QAAQ,GAAGX,MAAM,CAACU,GAAI;;;;;;;;YAQhBD,kBAAmB;;;CAR/B;AAaA,MAAMG,SAAS,GAAGZ,MAAM,CAACU,GAAI;;;;;;;;;;;;IAYzB,CAAC;AAAEF,EAAAA,IAAI,GAAG;AAAT,CAAD,KACAA,IAAI,KAAM,OAAV,GACK;;;KADL,GAKK;;;GAGL;CArBJ;AAwBA,MAAMK,QAAQ,GAAGb,MAAM,CAACU,GAAI;;;;;;;;;;IAUxB,CAAC;AAAEF,EAAAA,IAAI,GAAG;AAAT,CAAD,KACAA,IAAI,KAAM,OAAV,GACK;;;KADL,GAKK;;;GAGL;CAnBJ","sourcesContent":["import React, { useContext, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport ModeContext from '../contexts/mode';\n\ninterface CardProps {\n  imgUrl: string;\n  name: string;\n  population: string;\n  region: string;\n  capital: string;\n}\n\nconst Card: React.FC<CardProps> = ({\n  imgUrl,\n  name,\n  population,\n  region,\n  capital,\n}: CardProps) => {\n  const mode = useContext(ModeContext);\n\n  return (\n    <FlipCard>\n      <InnerCardContainer mode={mode}>\n        <CardFront mode={mode}>\n          <img src={imgUrl} alt={name}></img>\n          <div>\n            <h3>{name}</h3>\n            <p>\n              <b>Population: </b> {population}\n            </p>\n            <p>\n              <b>Region: </b> {region}\n            </p>\n            <p>\n              <b>Capital: </b> {capital}\n            </p>\n          </div>\n        </CardFront>\n        <CardBack mode={mode}>\n          <div>BACK</div>\n        </CardBack>\n      </InnerCardContainer>\n    </FlipCard>\n  );\n};\n\nexport default Card;\n\n// Styled component\ninterface CardSide {\n  mode: string;\n}\n\nconst InnerCardContainer = styled.div`\n  border-radius: 5px;\n  position: relative;\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n  width: 100%;\n  height: 100%;\n\n  ${({ mode = 'light' }: CardSide) =>\n    mode === `light`\n      ? `\n    color: black;\n    box-shadow: 0 0 8px #d9d9d9;\n    `\n      : `\n    color: white;\n    box-shadow: 0 0 8px #1D2A36;\n  `};\n`;\n\nconst FlipCard = styled.div`\n  background-color: transparent;\n  margin: 2%;\n  width: 250px;\n  height: 500px;\n\n  perspective: 1000px;\n\n  &:hover ${InnerCardContainer} {\n    transform: rotateY(180deg);\n  }\n`;\n\nconst CardFront = styled.div`\n  backface-visibility: hidden;\n\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  & img {\n    max-width: 100%;\n  }\n\n  ${({ mode = 'light' }: CardSide) =>\n    mode === `light`\n      ? `\n    background-color: white;\n    color: black;\n    `\n      : `\n    background-color: #324354;\n    color: white;\n  `};\n`;\n\nconst CardBack = styled.div`\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n  border: 1px solid red;\n\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  ${({ mode = 'light' }: CardSide) =>\n    mode === `light`\n      ? `\n    background-color: white;\n    color: black;\n    `\n      : `\n    background-color: #324354;\n    color: white;\n  `};\n`;\n"]},"metadata":{},"sourceType":"module"}