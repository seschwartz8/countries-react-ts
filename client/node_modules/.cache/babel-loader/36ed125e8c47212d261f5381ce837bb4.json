{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/countries-react-ts/world-traveler-react-ts/src/components/Loading.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Loading = ({\n  text = 'Loading',\n  speed = 300\n}) => {\n  const [content, setContent] = useState(text);\n  useEffect(() => {\n    //every 300ms either add a dot or reset to 'Loading'\n    const intervalId = setInterval(() => {\n      setContent(content => {\n        return content === `${text}...` ? text : `${content}.`;\n      });\n    }, [speed]); // Clear the interval timer when the component is unmounted\n\n    return () => clearInterval(intervalId);\n  }, [text, speed]);\n  return React.createElement(LoadingContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, content);\n};\n\nexport default Loading; // Styled component\n\nconst LoadingContent = styled.h2`\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin-top: 20px;\n  text-align: center;\n`;","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/countries-react-ts/world-traveler-react-ts/src/components/Loading.tsx"],"names":["React","useState","useEffect","styled","Loading","text","speed","content","setContent","intervalId","setInterval","clearInterval","LoadingContent","h2"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAOA,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG,SAAT;AAAoBC,EAAAA,KAAK,GAAG;AAA5B,CAAD,KAAuC;AAC7E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACI,IAAD,CAAtC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMO,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnCF,MAAAA,UAAU,CAAED,OAAD,IAAa;AACtB,eAAOA,OAAO,KAAM,GAAEF,IAAK,KAApB,GAA2BA,IAA3B,GAAmC,GAAEE,OAAQ,GAApD;AACD,OAFS,CAAV;AAGD,KAJ6B,EAI3B,CAACD,KAAD,CAJ2B,CAA9B,CAFc,CAQd;;AACA,WAAO,MAAMK,aAAa,CAACF,UAAD,CAA1B;AACD,GAVQ,EAUN,CAACJ,IAAD,EAAOC,KAAP,CAVM,CAAT;AAYA,SAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBC,OAAjB,CAAP;AACD,CAhBD;;AAkBA,eAAeH,OAAf,C,CAEA;;AACA,MAAMQ,cAAc,GAAGT,MAAM,CAACU,EAAG;;;;;;CAAjC","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\ninterface LoadingProps {\n  text?: string;\n  speed?: number;\n}\n\nconst Loading: React.FC<LoadingProps> = ({ text = 'Loading', speed = 300 }) => {\n  const [content, setContent] = useState(text);\n\n  useEffect(() => {\n    //every 300ms either add a dot or reset to 'Loading'\n    const intervalId = setInterval(() => {\n      setContent((content) => {\n        return content === `${text}...` ? text : `${content}.`;\n      });\n    }, [speed]);\n\n    // Clear the interval timer when the component is unmounted\n    return () => clearInterval(intervalId);\n  }, [text, speed]);\n\n  return <LoadingContent>{content}</LoadingContent>;\n};\n\nexport default Loading;\n\n// Styled component\nconst LoadingContent = styled.h2`\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin-top: 20px;\n  text-align: center;\n`;\n"]},"metadata":{},"sourceType":"module"}