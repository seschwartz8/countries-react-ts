{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/countries-react-ts/src/components/Loading.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nconst LoadingContent = styled.h2`\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nconst Loading = ({\n  text = 'Loading',\n  speed = 300\n}) => {\n  const [content, setContent] = useState(text);\n  useEffect(() => {\n    //every 300ms either add a dot or reset to 'Loading'\n    const intervalId = setInterval(() => {\n      console.log(text);\n      content === text + '...' ? setContent(text) : setContent(content => content + '.');\n    }, [speed, content]); // Clear the interval timer when the component is unmounted\n\n    return () => clearInterval(intervalId);\n  }, [text, speed]);\n  return React.createElement(LoadingContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, content);\n};\n\nexport default Loading;","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/countries-react-ts/src/components/Loading.tsx"],"names":["React","useState","useEffect","styled","LoadingContent","h2","Loading","text","speed","content","setContent","intervalId","setInterval","console","log","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,cAAc,GAAGD,MAAM,CAACE,EAAG;;;;;;CAAjC;;AAaA,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG,SAAT;AAAoBC,EAAAA,KAAK,GAAG;AAA5B,CAAD,KAAuC;AAC7E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAACM,IAAD,CAAtC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMS,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAE,MAAAA,OAAO,KAAKF,IAAI,GAAG,KAAnB,GACIG,UAAU,CAACH,IAAD,CADd,GAEIG,UAAU,CAAED,OAAD,IAAaA,OAAO,GAAG,GAAxB,CAFd;AAGD,KAL6B,EAK3B,CAACD,KAAD,EAAQC,OAAR,CAL2B,CAA9B,CAFc,CASd;;AACA,WAAO,MAAMM,aAAa,CAACJ,UAAD,CAA1B;AACD,GAXQ,EAWN,CAACJ,IAAD,EAAOC,KAAP,CAXM,CAAT;AAaA,SAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBC,OAAjB,CAAP;AACD,CAjBD;;AAmBA,eAAeH,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst LoadingContent = styled.h2`\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin-top: 20px;\n  text-align: center;\n`;\n\ninterface LoadingProps {\n  text?: string;\n  speed?: number;\n}\n\nconst Loading: React.FC<LoadingProps> = ({ text = 'Loading', speed = 300 }) => {\n  const [content, setContent] = useState(text);\n\n  useEffect(() => {\n    //every 300ms either add a dot or reset to 'Loading'\n    const intervalId = setInterval(() => {\n      console.log(text);\n      content === text + '...'\n        ? setContent(text)\n        : setContent((content) => content + '.');\n    }, [speed, content]);\n\n    // Clear the interval timer when the component is unmounted\n    return () => clearInterval(intervalId);\n  }, [text, speed]);\n\n  return <LoadingContent>{content}</LoadingContent>;\n};\n\nexport default Loading;\n"]},"metadata":{},"sourceType":"module"}