{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/countries-react-ts/src/components/App.tsx\";\nimport React, { useEffect, useReducer } from 'react';\nimport CardList from './CardList';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'fetch_countries':\n      return { ...state,\n        countries: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const initialState = {\n    countries: []\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    const url = `https://restcountries.eu/rest/v2/all`; //Fetch country data and set it on state\n\n    axios.get(url).then(response => {\n      console.log(response.data);\n      const countries = response.data.map(result => {\n        return {\n          imgUrl: result.flag,\n          name: result.name,\n          population: result.population,\n          region: result.region,\n          capital: result.capital\n        };\n      });\n      dispatch({\n        type: 'fetch_countries',\n        payload: countries\n      });\n    }).catch(error => {\n      console.warn(error.message);\n    });\n  }, []);\n  return React.createElement(CardList, {\n    countries: state.countries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/countries-react-ts/src/components/App.tsx"],"names":["React","useEffect","useReducer","CardList","axios","reducer","state","action","type","countries","payload","App","initialState","dispatch","url","get","then","response","console","log","data","map","result","imgUrl","flag","name","population","region","capital","catch","error","warn","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAqBA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAkBC,MAAlB,KAAqC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,SAAS,EAAEF,MAAM,CAACG;AAA9B,OAAP;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD,CAPD;;AASA,MAAMK,GAAG,GAAG,MAAM;AAChB,QAAMC,YAAsB,GAAG;AAC7BH,IAAAA,SAAS,EAAE;AADkB,GAA/B;AAGA,QAAM,CAACH,KAAD,EAAQO,QAAR,IAAoBX,UAAU,CAACG,OAAD,EAAUO,YAAV,CAApC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,GAAG,GAAI,sCAAb,CADc,CAEd;;AACAV,IAAAA,KAAK,CACFW,GADH,CACOD,GADP,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,YAAMX,SAAoB,GAAGQ,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAC1BC,MAAD,IAAgC;AAC9B,eAAO;AACLC,UAAAA,MAAM,EAAED,MAAM,CAACE,IADV;AAELC,UAAAA,IAAI,EAAEH,MAAM,CAACG,IAFR;AAGLC,UAAAA,UAAU,EAAEJ,MAAM,CAACI,UAHd;AAILC,UAAAA,MAAM,EAAEL,MAAM,CAACK,MAJV;AAKLC,UAAAA,OAAO,EAAEN,MAAM,CAACM;AALX,SAAP;AAOD,OAT0B,CAA7B;AAWAf,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAE,iBAAR;AAA2BE,QAAAA,OAAO,EAAED;AAApC,OAAD,CAAR;AACD,KAhBH,EAiBGoB,KAjBH,CAiBUC,KAAD,IAAW;AAChBZ,MAAAA,OAAO,CAACa,IAAR,CAAaD,KAAK,CAACE,OAAnB;AACD,KAnBH;AAoBD,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,SAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE1B,KAAK,CAACG,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAhCD;;AAkCA,eAAeE,GAAf","sourcesContent":["import React, { useEffect, useReducer } from 'react';\nimport CardList from './CardList';\nimport axios from 'axios';\n\nexport interface Country {\n  id: number;\n  imgUrl: string;\n  name: string;\n  population: string;\n  region: string;\n  capital: string;\n}\n\ninterface AppState {\n  countries: Country[];\n}\n\ninterface Action {\n  type: string;\n  // Accept additional properties\n  [x: string]: any;\n}\n\nconst reducer = (state: AppState, action: Action) => {\n  switch (action.type) {\n    case 'fetch_countries':\n      return { ...state, countries: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const initialState: AppState = {\n    countries: [],\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    const url = `https://restcountries.eu/rest/v2/all`;\n    //Fetch country data and set it on state\n    axios\n      .get(url)\n      .then((response) => {\n        console.log(response.data);\n        const countries: Country[] = response.data.map(\n          (result: AxiosResponse<any>) => {\n            return {\n              imgUrl: result.flag,\n              name: result.name,\n              population: result.population,\n              region: result.region,\n              capital: result.capital,\n            };\n          }\n        );\n        dispatch({ type: 'fetch_countries', payload: countries });\n      })\n      .catch((error) => {\n        console.warn(error.message);\n      });\n  }, []);\n\n  return <CardList countries={state.countries} />;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}