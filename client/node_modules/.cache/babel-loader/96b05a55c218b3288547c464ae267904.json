{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/countries-react-ts/src/components/Card.tsx\";\nimport React, { useContext, useState } from 'react';\nimport styled from 'styled-components';\nimport ModeContext from '../contexts/mode';\nimport { useSpring, animated } from 'react-spring';\n\nconst Card = ({\n  imgUrl,\n  name,\n  population,\n  region,\n  capital\n}) => {\n  const mode = useContext(ModeContext);\n  const [flipped, setFlipped] = useState(false);\n  const {\n    transform,\n    opacity\n  } = useSpring({\n    opacity: flipped ? 1 : 0,\n    transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n    config: {\n      mass: 5,\n      tension: 500,\n      friction: 80\n    }\n  });\n  return React.createElement(CardContainer, {\n    onClick: () => setFlipped(flipped => !flipped),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(CardBack, {\n    mode: mode,\n    style: {\n      opacity: opacity.interpolate(o => 1 - o),\n      transform\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"BACK\"), React.createElement(CardFront, {\n    mode: mode,\n    style: {\n      opacity,\n      transform: transform.interpolate(t => `${t} rotateX(180deg)`)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgUrl,\n    alt: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Population: \"), \" \", population), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Region: \"), \" \", region), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Capital: \"), \" \", capital))));\n};\n\nexport default Card; // Styled component\n\nconst CardContainer = styled.div`\n  border-radius: 5px;\n  margin: 2%;\n  max-width: 250px;\n`;\nconst CardFront = styled(animated.div)`\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  & img {\n    max-width: 250px;\n  }\n\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n      background-color: white;\n      color: black;\n      box-shadow: 0 0 8px #d9d9d9;\n      ` : `\n      background-color: #324354;\n      color: white;\n      box-shadow: 0 0 8px #1D2A36;\n  `};\n`;\nconst CardBack = styled(animated.div)`\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n      background-color: white;\n      color: black;\n      box-shadow: 0 0 8px #d9d9d9;\n      ` : `\n      background-color: #324354;\n      color: white;\n      box-shadow: 0 0 8px #1D2A36;\n  `};\n`;","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/countries-react-ts/src/components/Card.tsx"],"names":["React","useContext","useState","styled","ModeContext","useSpring","animated","Card","imgUrl","name","population","region","capital","mode","flipped","setFlipped","transform","opacity","config","mass","tension","friction","interpolate","o","t","CardContainer","div","CardFront","CardBack"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport styled from 'styled-components';\nimport ModeContext from '../contexts/mode';\nimport { useSpring, animated } from 'react-spring';\n\ninterface CardProps {\n  imgUrl: string;\n  name: string;\n  population: string;\n  region: string;\n  capital: string;\n}\n\nconst Card: React.FC<CardProps> = ({\n  imgUrl,\n  name,\n  population,\n  region,\n  capital,\n}: CardProps) => {\n  const mode = useContext(ModeContext);\n  const [flipped, setFlipped] = useState(false);\n\n  const { transform, opacity } = useSpring({\n    opacity: flipped ? 1 : 0,\n    transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n    config: { mass: 5, tension: 500, friction: 80 },\n  });\n\n  return (\n    <CardContainer onClick={() => setFlipped((flipped) => !flipped)}>\n      <CardBack\n        mode={mode}\n        style={{\n          opacity: opacity.interpolate((o) => 1 - o),\n          transform,\n        }}\n      >\n        BACK\n      </CardBack>\n\n      <CardFront\n        mode={mode}\n        style={{\n          opacity,\n          transform: transform.interpolate((t) => `${t} rotateX(180deg)`),\n        }}\n      >\n        <img src={imgUrl} alt={name}></img>\n        <div>\n          <h3>{name}</h3>\n          <p>\n            <b>Population: </b> {population}\n          </p>\n          <p>\n            <b>Region: </b> {region}\n          </p>\n          <p>\n            <b>Capital: </b> {capital}\n          </p>\n        </div>\n      </CardFront>\n    </CardContainer>\n  );\n};\n\nexport default Card;\n\n// Styled component\nconst CardContainer = styled.div`\n  border-radius: 5px;\n  margin: 2%;\n  max-width: 250px;\n`;\n\nconst CardFront = styled(animated.div)`\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  & img {\n    max-width: 250px;\n  }\n\n  ${({ mode = 'light' }: CardSideProps) =>\n    mode === `light`\n      ? `\n      background-color: white;\n      color: black;\n      box-shadow: 0 0 8px #d9d9d9;\n      `\n      : `\n      background-color: #324354;\n      color: white;\n      box-shadow: 0 0 8px #1D2A36;\n  `};\n`;\n\nconst CardBack = styled(animated.div)`\n  ${({ mode = 'light' }: CardSideProps) =>\n    mode === `light`\n      ? `\n      background-color: white;\n      color: black;\n      box-shadow: 0 0 8px #d9d9d9;\n      `\n      : `\n      background-color: #324354;\n      color: white;\n      box-shadow: 0 0 8px #1D2A36;\n  `};\n`;\n\ninterface CardSideProps {\n  mode: string;\n}\n"]},"metadata":{},"sourceType":"module"}