{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/world-traveler-react-ts/client/src/components/Card.tsx\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport ModeContext from '../contexts/mode';\nimport axios from 'axios';\n\nconst Card = ({\n  imgUrl,\n  name,\n  population,\n  region,\n  capital,\n  latitude,\n  longitude\n}) => {\n  const mode = useContext(ModeContext);\n  const [flipped, setFlipped] = useState(false);\n  const [saved, setSaved] = useState(false);\n\n  const toggleFlip = () => {\n    setFlipped(flipped => !flipped);\n  };\n\n  const clickSaveButton = () => {\n    setSaved(true);\n  };\n\n  useEffect(() => {\n    const url = 'http://localhost:3001';\n\n    if (saved) {\n      axios.post(`${url}/destinations`, {\n        name: name,\n        latitude: latitude,\n        longitude: longitude\n      });\n    }\n  }, [saved]);\n  return React.createElement(FlipCard, {\n    onClick: toggleFlip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(InnerCardContainer, {\n    flipped: flipped,\n    mode: mode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(CardFront, {\n    mode: mode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgUrl,\n    alt: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Population: \"), \" \", population), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Region: \"), \" \", region), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Capital: \"), \" \", capital))), React.createElement(CardBack, {\n    mode: mode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(StyledButton, {\n    onClick: clickSaveButton,\n    mode: mode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Save Destination\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Population: \"), \" \", population), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Region: \"), \" \", region), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Capital: \"), \" \", capital)))));\n};\n\nexport default Card; // Styled component\n\nconst HoverAnimation = keyframes`\n  100% {\n    transform: scale(1.1);\n  }\n`;\nconst InnerCardContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n  border-radius: 5px;\n\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n    color: black;\n    box-shadow: 0 0 8px #d9d9d9;\n    ` : `\n    color: white;\n    box-shadow: 0 0 8px #1D2A36;\n  `};\n\n  ${({\n  flipped = true\n}) => flipped === true ? `\n      transform: rotateY(180deg);\n      ` : ``};\n`;\nconst FlipCard = styled.div`\n  background-color: transparent;\n  margin: 2%;\n  width: 250px;\n  height: 380px;\n  perspective: 1000px;\n  border-radius: 5px;\n  &:hover {\n    animation: ${HoverAnimation} 0.3s 1 forwards;\n  }\n`;\nconst CardFront = styled.div`\n  backface-visibility: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  & img {\n    max-width: 250px;\n    border-radius: 5px 5px 0 0;\n  }\n\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n    background-color: white;\n    color: black;\n    ` : `\n    background-color: #324354;\n    color: white;\n  `};\n`;\nconst CardBack = styled.div`\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n    background-color: white;\n    color: black;\n    ` : `\n    background-color: #324354;\n    color: white;\n  `};\n`;\nconst StyledButton = styled.div`\n  padding: 10%;\n  border-radius: 5px;\n  &:hover {\n    opacity: 0.8;\n  }\n\n  ${({\n  mode = 'light'\n}) => mode === `light` ? `\n      background-color: #d5dbed;\n      ` : `\n      background-color: #7676a8;\n      `};\n`;","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/world-traveler-react-ts/client/src/components/Card.tsx"],"names":["React","useContext","useState","useEffect","styled","keyframes","ModeContext","axios","Card","imgUrl","name","population","region","capital","latitude","longitude","mode","flipped","setFlipped","saved","setSaved","toggleFlip","clickSaveButton","url","post","HoverAnimation","InnerCardContainer","div","FlipCard","CardFront","CardBack","StyledButton"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport ModeContext from '../contexts/mode';\nimport axios from 'axios';\n\ninterface CardProps {\n  imgUrl: string;\n  name: string;\n  population: string;\n  region: string;\n  capital: string;\n  latitude: number;\n  longitude: number;\n}\n\nconst Card: React.FC<CardProps> = ({\n  imgUrl,\n  name,\n  population,\n  region,\n  capital,\n  latitude,\n  longitude,\n}: CardProps) => {\n  const mode = useContext(ModeContext);\n  const [flipped, setFlipped] = useState(false);\n  const [saved, setSaved] = useState(false);\n\n  const toggleFlip = () => {\n    setFlipped((flipped) => !flipped);\n  };\n\n  const clickSaveButton = () => {\n    setSaved(true);\n  };\n\n  useEffect(() => {\n    const url = 'http://localhost:3001';\n\n    if (saved) {\n      axios.post(`${url}/destinations`, {\n        name: name,\n        latitude: latitude,\n        longitude: longitude,\n      });\n    }\n  }, [saved]);\n\n  return (\n    <FlipCard onClick={toggleFlip}>\n      <InnerCardContainer flipped={flipped} mode={mode}>\n        <CardFront mode={mode}>\n          <img src={imgUrl} alt={name}></img>\n          <div>\n            <h3>{name}</h3>\n            <p>\n              <b>Population: </b> {population}\n            </p>\n            <p>\n              <b>Region: </b> {region}\n            </p>\n            <p>\n              <b>Capital: </b> {capital}\n            </p>\n          </div>\n        </CardFront>\n        <CardBack mode={mode}>\n          <StyledButton onClick={clickSaveButton} mode={mode}>\n            Save Destination\n          </StyledButton>\n          <div>\n            <h3>{name}</h3>\n            <p>\n              <b>Population: </b> {population}\n            </p>\n            <p>\n              <b>Region: </b> {region}\n            </p>\n            <p>\n              <b>Capital: </b> {capital}\n            </p>\n          </div>\n        </CardBack>\n      </InnerCardContainer>\n    </FlipCard>\n  );\n};\n\nexport default Card;\n\n// Styled component\nconst HoverAnimation = keyframes`\n  100% {\n    transform: scale(1.1);\n  }\n`;\n\ninterface CardSideProps {\n  mode: string;\n}\n\ninterface InnerCardContainerProps {\n  mode: string;\n  flipped: boolean;\n}\n\nconst InnerCardContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n  border-radius: 5px;\n\n  ${({ mode = 'light' }: InnerCardContainerProps) =>\n    mode === `light`\n      ? `\n    color: black;\n    box-shadow: 0 0 8px #d9d9d9;\n    `\n      : `\n    color: white;\n    box-shadow: 0 0 8px #1D2A36;\n  `};\n\n  ${({ flipped = true }: InnerCardContainerProps) =>\n    flipped === true\n      ? `\n      transform: rotateY(180deg);\n      `\n      : ``};\n`;\n\nconst FlipCard = styled.div`\n  background-color: transparent;\n  margin: 2%;\n  width: 250px;\n  height: 380px;\n  perspective: 1000px;\n  border-radius: 5px;\n  &:hover {\n    animation: ${HoverAnimation} 0.3s 1 forwards;\n  }\n`;\n\nconst CardFront = styled.div`\n  backface-visibility: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  & img {\n    max-width: 250px;\n    border-radius: 5px 5px 0 0;\n  }\n\n  ${({ mode = 'light' }: CardSideProps) =>\n    mode === `light`\n      ? `\n    background-color: white;\n    color: black;\n    `\n      : `\n    background-color: #324354;\n    color: white;\n  `};\n`;\n\nconst CardBack = styled.div`\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  & div {\n    margin: 5% 0;\n    padding: 10%;\n  }\n\n  ${({ mode = 'light' }: CardSideProps) =>\n    mode === `light`\n      ? `\n    background-color: white;\n    color: black;\n    `\n      : `\n    background-color: #324354;\n    color: white;\n  `};\n`;\n\nconst StyledButton = styled.div`\n  padding: 10%;\n  border-radius: 5px;\n  &:hover {\n    opacity: 0.8;\n  }\n\n  ${({ mode = 'light' }: StyledButtonProps) =>\n    mode === `light`\n      ? `\n      background-color: #d5dbed;\n      `\n      : `\n      background-color: #7676a8;\n      `};\n`;\n\ninterface StyledButtonProps {\n  mode: string;\n}\n"]},"metadata":{},"sourceType":"module"}