{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/world-traveler-react-ts/client/src/components/Map.tsx\";\nimport * as React from 'react';\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\nconst MAPBOX_TOKEN = 'pk.eyJ1Ijoic2VzY2h3YXJ0ejgiLCJhIjoiY2s5aW83cXNxMWJ1MTNrbGxzaW55YmFqbCJ9.Wcju4UV4OLz90abpY6HtuA' || '';\nconst initialState = {\n  viewport: {\n    height: 400,\n    latitude: 37.776021,\n    longitude: -122.4171949,\n    minZoom: 2,\n    width: 400,\n    zoom: 2\n  }\n};\nconst data = {\n  type: 'Feature',\n  geometry: {\n    type: 'LineString',\n    coordinates: [[-122.48369693756104, 37.83381888486939], [-122.48348236083984, 37.83317489144141], [-122.48339653015138, 37.83270036637107], [-122.48356819152832, 37.832056363179625], [-122.48404026031496, 37.83114119107971], [-122.48404026031496, 37.83049717427869], [-122.48348236083984, 37.829920943955045], [-122.48356819152832, 37.82954808664175], [-122.48507022857666, 37.82944639795659], [-122.48610019683838, 37.82880236636284], [-122.48695850372314, 37.82931081282506], [-122.48700141906738, 37.83080223556934], [-122.48751640319824, 37.83168351665737], [-122.48803138732912, 37.832158048267786], [-122.48888969421387, 37.83297152392784], [-122.48987674713133, 37.83263257682617], [-122.49043464660643, 37.832937629287755], [-122.49125003814696, 37.832429207817725], [-122.49163627624512, 37.832564787218985], [-122.49223709106445, 37.83337825839438], [-122.49378204345702, 37.83368330777276]]\n  }\n};\nexport default class Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.updateViewport = viewport => {\n      this.setState(prevState => ({\n        viewport: { ...prevState.viewport,\n          ...viewport\n        }\n      }));\n    };\n\n    this.resize = () => {\n      this.setState(prevState => ({\n        viewport: { ...prevState.viewport,\n          height: window.innerHeight,\n          width: window.innerWidth\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resize);\n    this.resize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    const {\n      viewport\n    } = this.state;\n    return React.createElement(ReactMapGL, Object.assign({}, viewport, {\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      onViewportChange: v => this.updateViewport(v),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Source, {\n      id: \"route\",\n      type: \"geojson\" //@ts-ignore\n      ,\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Layer, {\n      id: \"route\",\n      type: \"line\",\n      source: \"route\",\n      layout: {\n        'line-join': 'round',\n        'line-cap': 'round'\n      },\n      paint: {\n        'line-color': '#888',\n        'line-width': 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps TYPESCRIPT/world-traveler-react-ts/client/src/components/Map.tsx"],"names":["React","ReactMapGL","Source","Layer","MAPBOX_TOKEN","initialState","viewport","height","latitude","longitude","minZoom","width","zoom","data","type","geometry","coordinates","Map","Component","state","updateViewport","setState","prevState","resize","window","innerHeight","innerWidth","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","v"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1Ijoic2VzY2h3YXJ0ejgiLCJhIjoiY2s5aW83cXNxMWJ1MTNrbGxzaW55YmFqbCJ9.Wcju4UV4OLz90abpY6HtuA' ||\n  '';\n\nconst initialState = {\n  viewport: {\n    height: 400,\n    latitude: 37.776021,\n    longitude: -122.4171949,\n    minZoom: 2,\n    width: 400,\n    zoom: 2,\n  },\n};\n\nconst data = {\n  type: 'Feature',\n  geometry: {\n    type: 'LineString',\n    coordinates: [\n      [-122.48369693756104, 37.83381888486939],\n      [-122.48348236083984, 37.83317489144141],\n      [-122.48339653015138, 37.83270036637107],\n      [-122.48356819152832, 37.832056363179625],\n      [-122.48404026031496, 37.83114119107971],\n      [-122.48404026031496, 37.83049717427869],\n      [-122.48348236083984, 37.829920943955045],\n      [-122.48356819152832, 37.82954808664175],\n      [-122.48507022857666, 37.82944639795659],\n      [-122.48610019683838, 37.82880236636284],\n      [-122.48695850372314, 37.82931081282506],\n      [-122.48700141906738, 37.83080223556934],\n      [-122.48751640319824, 37.83168351665737],\n      [-122.48803138732912, 37.832158048267786],\n      [-122.48888969421387, 37.83297152392784],\n      [-122.48987674713133, 37.83263257682617],\n      [-122.49043464660643, 37.832937629287755],\n      [-122.49125003814696, 37.832429207817725],\n      [-122.49163627624512, 37.832564787218985],\n      [-122.49223709106445, 37.83337825839438],\n      [-122.49378204345702, 37.83368330777276],\n    ],\n  },\n};\n\ntype State = typeof initialState;\ntype Viewport = typeof initialState.viewport;\n\nexport default class Map extends React.Component<{}, State> {\n  public state: State = initialState;\n\n  public componentDidMount() {\n    window.addEventListener('resize', this.resize);\n    this.resize();\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  public updateViewport = (viewport: Viewport) => {\n    this.setState((prevState) => ({\n      viewport: { ...prevState.viewport, ...viewport },\n    }));\n  };\n\n  public resize = () => {\n    this.setState((prevState) => ({\n      viewport: {\n        ...prevState.viewport,\n        height: window.innerHeight,\n        width: window.innerWidth,\n      },\n    }));\n  };\n\n  public render() {\n    const { viewport } = this.state;\n    return (\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        onViewportChange={(v: Viewport) => this.updateViewport(v)}\n      >\n        <Source\n          id='route'\n          type='geojson'\n          //@ts-ignore\n          data={data}\n        />\n        <Layer\n          id='route'\n          type='line'\n          source='route'\n          layout={{\n            'line-join': 'round',\n            'line-cap': 'round',\n          }}\n          paint={{\n            'line-color': '#888',\n            'line-width': 8,\n          }}\n        />\n        {/* <div style={{ position: 'absolute', right: 30, bottom: 30 }}>\n          <NavigationControl onViewportChange={this.updateViewport} />\n        </div> */}\n      </ReactMapGL>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}